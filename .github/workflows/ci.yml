name: CI

on:
  - push
  - pull_request

permissions: {}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arch:
          - x64
        node:
          - 20
        os:
          - ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.arch }}
      - run: npm install
      - run: npm test
  build:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arch:
          - x64
        os:
          - ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          architecture: ${{ matrix.arch }}
      - run: npm install
      - run: npm run prebuild
      - run: npm run prebuild-linux-arm64
        if: matrix.node == 20 && matrix.os == 'ubuntu-20.04' && startsWith(github.ref, 'refs/tags/')
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: prebuilds
          retention-days: 1
  release:
    needs: build
    permissions:
      contents: write # Needed for softprops/action-gh-release.
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: prebuilds
      - run: echo "version=$(git describe --tags)" >> $GITHUB_OUTPUT
        id: get_version
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-linux-arm64.tar" -C
          "prebuilds/ubuntu-20.04-arm64" linux-arm64
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-linux-x64.tar" -C
          "prebuilds/ubuntu-20.04-x64" linux-x64
      - uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.get_version.outputs.version }}-*.tar
          token: ${{ secrets.GITHUB_TOKEN }}
